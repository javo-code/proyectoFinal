paths:
  /api/users:
    get:
      tags:
        - Users
      summary: Obtiene todos los usuarios.
      description: Retorna todos los usuarios almacenados.
      responses:
        200:
          description: Lista de usuarios obtenida exitosamente.
        404:
          description: Error Geting Product.
        500:
          description: Error del servidor.

  /api/users/{id}:
    put:
      tags:
        - Users
      summary: Actualiza un usuario existente.
      description: Actualiza un usuario según su ID.
      parameters:
        - in: path
          name: id
          required: true
          description: ID del usuario a actualizar.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/NewUser"
      responses:
        200:
          description: Usuario actualizado exitosamente.
        400:
          description: Datos del usuario no válidos.
        404:
          description: Usuario no encontrado.
        500:
          description: Error del servidor.

    delete:
      tags:
        - Users
      summary: Elimina un usuario existente.
      description: Elimina un usuario según su ID.
      parameters:
        - in: path
          name: id
          required: true
          description: ID del usuario a eliminar.
          schema:
            type: string
      responses:
        200:
          description: Usuario eliminado exitosamente.
        404:
          description: Usuario no encontrado.
        500:
          description: Error del servidor.

  /api/users/register:
    post:
      tags:
        - Users
      summary: Registra un nuevo usuario.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/NewUser"
      responses:
        200:
          description: Usuario creado exitosamente.
        400:
          description: Datos del usuario no válidos.
        500:
          description: Error del servidor.

  /api/users/login:
    post:
      tags:
        - Users
      summary: Iniciar sesión.
      description: Recibe las credenciales del usuario para iniciar la sesión.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/Login"
      responses:
        200:
          description: Login OK!.
        404:
          description: Error Geting Product.

  /api/products:
    get:
      tags:
        - Products
      summary: Obtiene todos los productos.
      responses:
        200:
          depcription: Lista de productos obtenida exitosamente.
        404:
          description: Error Geting Product.

    post:
      tags:
        - Products
      summary: Crea un nuevo producto.
      description: Crea un nuevo producto con la información proporcionada.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/ProductBody"
      responses:
        200:
          description: Producto creado exitosamente.
        400:
          description: Datos del producto no válidos.
        500:
          description: Error del servidor.

  /api/products/{id}:
    get:
      tags:
        - Products
      summary: Obtiene un producto por su ID.
      description: Retorna un producto según su ID si es que existe en la base de datos.
      parameters:
        - in: path
          name: id
          required: true
          description: ID del producto a obtener.
          schema:
            type: string
      responses:
        200:
          description: Producto obtenido exitosamente.
        404:
          description: Producto no encontrado.
        500:
          description: Error del servidor.

    put:
      tags:
        - Products
      summary: Actualiza un producto existente.
      description: Actualiza el cuerpo de un producto según su ID.
      parameters:
        - in: path
          name: id
          required: true
          description: ID del producto a actualizar.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/ProductBody"
        required: true
      responses:
        200:
          description: Producto actualizado exitosamente.
        400:
          description: Datos del producto no válidos.
        404:
          description: Producto no encontrado.
        500:
          description: Error del servidor.

    delete:
      tags:
        - Products
      summary: Elimina un producto existente.
      description: Elimina un producto según su ID.
      parameters:
        - in: path
          name: id
          required: true
          description: ID del producto a eliminar.
          schema:
            type: string
      responses:
        200:
          description: Producto eliminado exitosamente.
        404:
          description: Producto no encontrado.
        500:
          description: Error del servidor.

  /api/carts/:
    get:
      tags:
        - Carts
      summary: Mostrar carrito del usuario.
      responses:
        200:
          description: Carrito obtenido exitosamente.
        404:
          description: Carrito no encontrado.
        500:
          description: Error del servidor.
    post:
      tags:
        - Carts
      summary: Crear carrito.
      responses:
        200:
          description: Carrito creado exitosamente.
        404:
          description: Carrito no encontrado.
        500:
          description: Error del servidor.

  /api/carts/{id}:
    delete:
      tags:
        - Carts
      summary: Borrar un carrito.
      parameters:
        - in: path
          name: id
          required: true
          description: Id del carrito  a eliminar.
          schema:
            type: string
      responses:
        200:
          description: El carrito se eliminó con éxito.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/carts/Cart"
        401:
          description: Usuario no autorizado.
        404:
          description: Error en validación del body.
        500:
          description: Error del servidor.
    get:
      tags:
        - Carts
      summary: Buscar carrito por Id.
      parameters:
        - in: path
          name: id
          required: true
          description: Id del carrito a buscar.
          schema:
            type: string
      responses:
        200:
          description: Carrito encontrado.
        401:
          description: Usuario no autorizado.
        404:
          description: Error en validación del body.
        500:
          description: Error del servidor.

  /api/carts/{idCart}/products/{idProd}:
    post:
      tags:
        - Carts
      summary: Agregar producto al carrito
      parameters:
        - in: path
          name: idCart
          required: true
          description: Id del carrito a buscar
          schema:
            type: string
        - in: path
          name: idProd
          required: true
          description: Id del producto
          schema:
            type: string
      responses:
        200:
          description: Producto agregado con éxito.
        401:
          description: Usuario no autorizado.
        404:
          description: Error en validación del body.
        500:
          description: Error del servidor.
    delete:
      tags:
        - Carts
      summary: Eliminar producto de carrito.
      parameters:
        - in: path
          name: idCart
          required: true
          description: Id del carrito a buscar.
          schema:
            type: string
        - in: path
          name: idProd
          required: true
          description: Id del producto.
          schema:
            type: string
      responses:
        200:
          description: Producto eliminado con éxito.
        401:
          description: Usuario no autorizado.
        404:
          description: Error en validación del body.
        500:
          description: Error del servidor.

  /api/carts/clear/{idCart}:
    delete:
      tags:
        - Carts
      summary: Vaciar carrito.
      parameters:
        - in: path
          name: idCart
          required: true
          description: Id del carrito a buscar.
          schema:
            type: string
      responses:
        200:
          description: Carrito vaciado con éxito.
        401:
          description: Usuario no autorizado.
        404:
          description: Error en validación del body.
        500:
          description: Error del servidor.

  /api/tickets/{cartId}:
    post:
      tags:
        - Tickets
      summary: Crear ticket con el resumen de compra del usuario.
      parameters:
        - in: path
          name: cartId
          required: true
          description: Id del carrito a buscar.
          schema:
            type: string
      responses:
        200:
          description: Ticket generado con éxito.
        401:
          description: Usuario no autorizado.
        404:
          description: Error en validación del body.
        500:
          description: Error del servidor.
