paths:
  /products:
    get:
      tags:
        - Productos
      summary: Obtiene todos los productos.
      requestBody:
        content:
          application/json:
            schema:
              $ref: #/components/parameters/schemas/BodyNewPost
        required: true
      description: Retorna todos los productos almacenados.
      responses:
        200:
          description: Lista de productos obtenida exitosamente.
        404:
          description: Error Geting Product.

    post:
      tags:
        - Productos
      summary: Crea un nuevo producto.
      description: Crea un nuevo producto con la información proporcionada.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: #/components/schemas/Product
      responses:
        200:
          description: Producto creado exitosamente.
        400:
          description: Datos del producto no válidos.
        500:
          description: Error del servidor.

    get/{id}:
      tags:
        - Productos
      summary: Obtiene un producto por su ID.
      description: Retorna un producto según su ID.
      parameters:
        - in: path
          name: id
          required: true
          description: ID del producto a obtener.
          schema:
            type: string
      responses:
        200:
          description: Producto obtenido exitosamente.
        404:
          description: Producto no encontrado.
        500:
          description: Error del servidor.

    put:
      tags:
        - Productos
      summary: Actualiza un producto existente.
      description: Actualiza un producto según su ID.
      parameters:
        - in: path
          name: id
          required: true
          description: ID del producto a actualizar.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: #/components/schemas/Product
      responses:
        200:
          description: Producto actualizado exitosamente.
        400:
          description: Datos del producto no válidos.
        404:
          description: Producto no encontrado.
        500:
          description: Error del servidor.

    delete:
      tags:
        - Productos
      summary: Elimina un producto existente.
      description: Elimina un producto según su ID.
      parameters:
        - in: path
          name: id
          required: true
          description: ID del producto a eliminar.
          schema:
            type: string
      responses:
        200:
          description: Producto eliminado exitosamente.
        404:
          description: Producto no encontrado.
        500:
          description: Error del servidor.

  /usuarios:
    get:
      tags:
        - Usuarios
      summary: Obtiene todos los usuarios.
      requestBody:
        content:
          application/json:
            schema:
              $ref: #/components/parameters/schemas/BodyNewPost
        required: true
      description: Retorna todos los usuarios almacenados.
      responses:
        200:
          description: Lista de usuarios obtenida exitosamente.
        404:
          description: Error Geting Product.

    post:
      tags:
        - Usuarios
      summary: Crea un nuevo Usuario.
      description: Crea un nuevo producto con la información proporcionada.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: #/components/schemas/Product
      responses:
        200:
          description: Usuario creado exitosamente.
        400:
          description: Datos del usuario no válidos.
        500:
          description: Error del servidor.

    get/{id}:
      tags:
        - Usuarios
      summary: Obtiene un usuario por su ID.
      description: Retorna un usuario según su ID.
      parameters:
        - in: path
          name: id
          required: true
          description: ID del usuario a obtener.
          schema:
            type: string
      responses:
        200:
          description: Usuario obtenido exitosamente.
        404:
          description: Usuario no encontrado.
        500:
          description: Error del servidor.

    put:
      tags:
        - Usuarios
      summary: Actualiza un usuario existente.
      description: Actualiza un usuario según su ID.
      parameters:
        - in: path
          name: id
          required: true
          description: ID del usuario a actualizar.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: #/components/schemas/Product
      responses:
        200:
          description: Usuario actualizado exitosamente.
        400:
          description: Datos del usuario no válidos.
        404:
          description: Usuario no encontrado.
        500:
          description: Error del servidor.

    delete:
      tags:
        - Usuarios
      summary: Elimina un usuario existente.
      description: Elimina un usuario según su ID.
      parameters:
        - in: path
          name: id
          required: true
          description: ID del usuario a eliminar.
          schema:
            type: string
      responses:
        200:
          description: Usuario eliminado exitosamente.
        404:
          description: Usuario no encontrado.
        500:
          description: Error del servidor.

  /carts:
    get:
      tags:
        - Carritos
      summary: Obtiene todos los carritos.
      description: Retorna todos los carritos almacenados.
      responses:
        200:
          description: Lista de carritos obtenida exitosamente.
        500:
          description: Error del servidor.

    post:
      tags:
        - Carritos
      summary: Crea un nuevo carrito.
      description: Crea un nuevo carrito.
      responses:
        200:
          description: Carrito creado exitosamente.
        500:
          description: Error del servidor.

    delete:
      tags:
        - Carritos
      summary: Elimina un carrito existente.
      description: Elimina un carrito según su ID.
      parameters:
        - in: path
          name: id
          required: true
          description: ID del carrito a eliminar.
          schema:
            type: string
      responses:
        200:
          description: Carrito eliminado exitosamente.
        404:
          description: Carrito no encontrado.
        500:
          description: Error del servidor.
